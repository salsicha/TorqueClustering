% -----------------------------------------------------------------------------
%  Torque Clustering - Matlab Implementation
%  Copyright (C) Jie Yang
%
%  Licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0
%  International (CC BY-NC-SA 4.0)
%
%  This code is intended for academic and research purposes only.
%  Commercial use is strictly prohibited. Please contact the author for licensing inquiries.
%
%  Author: Jie Yang (jie.yang.uts@gmail.com)
% -----------------------------------------------------------------------------

disp('AMI synthetic data sets rankings')

clear
data = [.9295	.0042	.9592	.9344	.0346	.8747	.9288	.9744	.8404	.9569	.9702	.7634	.2830	.5614	.7753	.8150	.9562
.4117	.0088	.4687	.3269	.0088	.0571	.0088	.4031	.7781	.8165	.3463	.2279	.7410	.2017	.8844	.9267	1.0000
-.0053	1.0000	-.0029	.0009	1.0000	.0046	.0060	1.0000	.2285	1.0000	.3154	.2445	1.0000	.2855	.1785	.3279	1.0000
.3983	1.0000	.6108	.6109	1.0000	.3391	.6351	1.0000	.6228	1.0000	.6526	.1247	1.0000	.1388	.2617	.1563	1.0000
.7321	1.0000	1.0000	1.0000	1.0000	.4324	1.0000	.7433	1.0000	1.0000	1.0000	.2916	1.0000	.3299	.6387	.6554	1.0000
.5799	1.0000	.5710	.5841	.7492	.5821	.5821	.7492	.9670	1.0000	.7673	.4821	.9953	.3829	.7860	1.0000	1.0000
.6025	1.0000	.6547	.6033	1.0000	.6579	.6307	.6501	1.0000	1.0000	.7495	.4481	1.0000	.4296	.6720	.8998	1.0000
.5573	.7343	.7004	.7213	.7055	.6972	.7188	.9950	.6314	.7134	.6005	.7947	.9557	.3426	.8882	.4710	.9925];

rank=zeros(8,17);
for i=1:8
rowdata=data(i,:);
for j=1:17
rank(i,j)=1+numel(find(rowdata>rowdata(j)));
end
end
vpa(mean(rank),2)

disp('AMI real-world data sets rankings')

clear

% we put the methods that are not applicable on the last one.
data = [.7145	.4622	.4463	.7612	.3573	.4812	.4016	.7603	.3068	.5860	.6306	.7531	.7361	.5373	.7342	.8025	.8384
.8839	.8386	.8889	-1	.8775	.8888	-1	.9292	-1	-1	.3806	.4576	.8390	.3446	.5171	.8021	.9295
.7614	.8007	.5877	.7891	.4685	.6453	.4763	.7918	.0000	.5829	.7914	.6643	.5176	.6080	.3162	.9237	.9439
.2321	.5899	.0068	.2198	.0036	.0516	.0068	.5769	-1	-1	.3700	.0368	.5113	.3270	.3273	.4858	.6389
.8707	.9944	.0061	.9851	.0001	.6459	.0001	.7583	.0000	.9888	.9545	.7706	.4803	.4362	.8530	.9944	.9944
.0147	.0028	-.0033	.0116	.0043	-.0033	-.0006	.0084	.0030	-.0029	.0181	.0197	.0280	.0198	.0115	.0305	.0633
.7468	.6558	.7733	.7073	.2990	.6991	.7733	.6720	.1892	.7849	.2603	.8190	.6821	.5764	.0041	.8622	.8546
.2414	.0013	.1781	.1781	1.0000	.1621	.0246	.2305	1.0000	1.0000	.6779	.3034	1.0000	.1839	.4053	.2858	1.0000
.8908	1.0000	.7322	1.0000	1.0000	1.0000	.7322	.8249	.7282	1.0000	.3647	.7047	.7322	.7494	.0000	1.0000	1.0000
.5014	.5360	.4696	.4696	.5360	.4696	.4696	.0881	.0399	-.0171	.5360	.5360	.6133	.2758	.0273	.1098	.5360
.4238	.7381	.3586	.4889	.9797	.3628	.2213	.9183	.1340	.2622	.8608	.5953	.6280	.6146	.0536	.6868	1.0000
.3373	.4339	.3747	.3618	.0383	.3489	.2726	.3343	.0826	.1019	.3338	.4547	.3410	.2040	.0472	.5484	.4770];

rank=zeros(12,17);
for i=1:12
rowdata=data(i,:);
for j=1:17
rank(i,j)=1+numel(find(rowdata>rowdata(j)));
end
end
vpa(mean(rank),2)


disp('NMI synthetic data sets rankings')

clear

data = [.9362	.0128	.9596	.9354	.0346	.8867	.9455	.9747	.8497	.9572	.9705	.8665	.2830	.7542	.8460	.8317	.9568
.4252	.0479	.4832	.3297	.0479	.0770	.0479	.4132	.7937	.8288	.5805	.4896	.8374	.4486	.9083	.9269	1.0000
.0006	1.0000	.0031	.0068	1.0000	.0106	.0119	1.0000	.3037	1.0000	.3903	.5359	1.0000	.5549	.2056	.5940	1.0000
.4399	1.0000	.6108	.6109	1.0000	.4406	.6351	1.0000	.6228	1.0000	.6526	.3720	1.0000	.3842	.5134	.4101	1.0000
.7371	1.0000	1.0000	1.0000	1.0000	.4611	1.0000	.7445	1.0000	1.0000	1.0000	.5583	1.0000	.5856	.8017	.8127	1.0000
.6186	1.0000	.6895	.5981	.8633	.7008	.6636	.8035	.9673	1.0000	.8766	.6995	.9977	.6267	.8750	1.0000	1.0000
.6169	1.0000	.6894	.6130	1.0000	.6920	.6775	.6663	1.0000	1.0000	.8660	.6846	1.0000	.6632	.7999	.9489	1.0000
.5850	.7881	.7020	.7229	.8341	.7052	.7204	.9950	.6868	.7304	.7030	.7947	.9709	.6015	.9092	.6943	.9925];

rank=zeros(8,17);
for i=1:8
rowdata=data(i,:);
for j=1:17
rank(i,j)=1+numel(find(rowdata>rowdata(j)));
end
end
vpa(mean(rank),2)

disp('NMI real-world data sets rankings')

clear
data=[.7368	.4622	.4463	.7811	.3573	.5828	.4016	.7947	.3068	.6540	.6794	.7757	.7528	.7695	.8060	.8978	.8604
.8839	.8386	.8889	-1	.8775	.8888	-1	.9292	-1	-1	.6020	.6560	.8390	.5741	.5171	.8021	.9295
.8137	.8564	.7256	.8353	.6990	.7428	.6577	.8657	.0419	.6919	.8504	.7897	.7223	.8393	.5510	.9628	.9720
.2321	.5860	.0277	.2671	.0385	.0516	.0285	.5769	-1	-1	.3700	.0368	.5113	.3270	.3273	.4858	.6389
.8918	.9948	.0464	.9860	.0318	.7252	.0320	.8302	.0000	.9895	.9745	.8785	.5620	.6699	.8960	.9948	.9948
.0200	.0057	.0006	.0204	.0387	.0006	.0083	.0114	.0118	.0000	.0344	.0295	.0448	.0666	.0249	.0720	.0847
.7946	.7396	.8331	.7615	.5391	.7389	.8331	.7218	.3473	.8481	.4362	.8654	.7911	.7717	.0770	.8979	.8913
.2833	.0158	.2257	.2257	1.0000	.2107	.0620	.2735	1.0000	1.0000	.8236	.5560	1.0000	.4382	.6382	.5503	1.0000
.9180	1.0000	.8264	1.0000	1.0000	1.0000	.8264	.8635	.7554	1.0000	.6179	.8489	.8264	.8817	.0000	1.0000	1.0000
.5138	.5466	.4835	.4835	.5466	.4835	.4835	.1577	.0631	.0025	.5466	.5466	.6211	.4115	.0970	.4387	.5466
.5406	.8123	.5060	.5982	.9897	.4920	.3859	.9532	.3857	.3930	.9152	.7977	.7589	.8387	.2099	.8208	1.0000
.4492	.4339	.3747	.4834	.0383	.3489	.2726	.3343	.0826	.1019	.3338	.4547	.3410	.4717	.0472	.5484	.4770];


rank=zeros(12,17);
for i=1:12
rowdata=data(i,:);
for j=1:17
rank(i,j)=1+numel(find(rowdata>rowdata(j)));
end
end
vpa(mean(rank),2)

disp('ACC synthetic data sets rankings')

clear
data=[.9090	.0773	.9754	.9570	.0738	.8514	.9138	.9856	.8548	.9740	.9842	.7468	.1334	.3124	.7318	.6692	.9714
.8401	.6458	.8333	.7208	.6458	.5167	.6458	.7875	.9625	.9708	.5375	.2292	.9375	.1458	.9833	.9917	1.0000
.3458	1.0000	.3590	.3750	1.0000	.3878	.4038	1.0000	.5769	1.0000	.4744	.1571	1.0000	.1635	.5032	.2692	1.0000
.4761	1.0000	.5435	.5440	1.0000	.5320	.6795	1.0000	.6325	1.0000	.5160	.1015	1.0000	.0670	.3510	.2370	1.0000
.8833	1.0000	1.0000	1.0000	1.0000	.6075	1.0000	.8500	1.0000	1.0000	1.0000	.1350	1.0000	.1700	.7700	.7200	1.0000
.5926	1.0000	.5890	.6580	.7490	.6180	.5760	.6500	.9890	1.0000	.7450	.4280	.9990	.1490	.8620	1.0000	1.0000
.7050	1.0000	.8070	.7140	1.0000	.8090	.7830	.7320	1.0000	1.0000	.7500	.5490	1.0000	.3010	.7100	.9300	1.0000
.5382	.5072	.7153	.7840	.7520	.7093	.7833	.9987	.6547	.7213	.5860	.6133	.9833	.1147	.9193	.4860	.9980];

rank=zeros(8,17);
for i=1:8
rowdata=data(i,:);
for j=1:17
rank(i,j)=1+numel(find(rowdata>rowdata(j)));
end
end
vpa(mean(rank),2)

disp('ACC real-world data sets rankings')

clear
data=[.5100	.2604	.2565	.5847	.2018	.3658	.2316	.6352	.1749	.4762	.4496	.5789	.5295	.2180	.5548	.6459	.6973
.8277	.7008	.8332	-1	.7942	.8289	-1	.9733	-1	-1	.0903	.1580	.7014	.0308	.0550	.6091	.9735
.5424	.6368	.2794	.6053	.3504	.3521	.2175	.5447	.0135	.3089	.5385	.3922	.4313	.3542	.2532	.8307	.8633
.3932	.7581	.7834	.7663	.7862	.6386	.7837	.8893	-1	-1	.2912	.5788	.8230	.0216	.0669	.6619	.9063
.8762	.9988	.3645	.9963	.3758	.7403	.3758	.7928	.3745	.9975	.9850	.8240	.5918	.3109	.9288	.9988	.9988
.5842	.5229	.7320	.7288	.7386	.7320	.7353	.5425	.7059	.6863	.6209	.4771	.7320	.1438	.7386	.2222	.7549
.7902	.7102	.8812	.8218	.5347	.8119	.8812	.7228	.3960	.8614	.4752	.9010	.7921	.6040	.4158	.8515	.9109
.7037	.5025	.6575	.6575	1.0000	.6450	.5250	.6963	1.0000	1.0000	.8163	.5675	1.0000	.1150	.6250	.5700	1.0000
.9157	1.0000	.8298	1.0000	1.0000	1.0000	.8298	.9149	.8936	1.0000	.5745	.7872	.8298	.7660	.2128	1.0000	1.0000
.8870	.9000	.8750	.8750	.9000	.8750	.8750	.6000	.6250	.5250	.9000	.9000	.9250	.5750	.5500	.5000	.9000
.2328	.6524	.1961	.2272	.9496	.1719	.1457	.7892	.1089	.1499	.7539	.3592	.6933	.3617	.0525	.4097	1.0000
.2571	.3364	.5271	.2675	.4611	.2395	.5402	.3286	.4518	.3193	.4325	.3331	.5950	.0617	.4707	.2997	.4054];

rank=zeros(12,17);
for i=1:12
rowdata=data(i,:);
for j=1:17
rank(i,j)=1+numel(find(rowdata>rowdata(j)));
end
end
vpa(mean(rank),2)





